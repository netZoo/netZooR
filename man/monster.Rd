% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MONSTER.R
\name{monster}
\alias{monster}
\title{MOdeling Network State Transitions from Expression and Regulatory data (MONSTER)}
\usage{
monster(expr, design, motif = NULL, nullPerms = 100, numMaxCores = 1,
  outputDir = NA)
}
\arguments{
\item{expr}{Gene Expression dataset, can be matrix or data.frame of expression values or ExpressionSet}

\item{design}{Binary vector indicating case control partition}

\item{motif}{Regulatory data.frame consisting of three columns.  For each row, a transcription factor (column 1) 
regulates a gene (column 2) with a defined strength (column 3), usually taken to be 0 or 1}

\item{nullPerms}{number of random permutations to run (default 100).  Set to 0 to only 
calculate observed transition matrix}

\item{numMaxCores}{requires doParallel, foreach.  Runs MONSTER in parallel computing 
environment.  Set to 1 to avoid parallelization.}

\item{outputDir}{character vector specifying a directory or path in which 
which to save MONSTER results, default is NA and results are not saved.}
}
\value{
An object of class "monsterAnalysis" containing results
}
\description{
This function runs the MONSTER algorithm.  Biological states are characterized by distinct patterns 
of gene expression that reflect each phenotype's active cellular processes. 
Driving these phenotypes are gene regulatory networks in which transcriptions factors control 
when and to what degree individual genes are expressed. Phenotypic transitions, such as those that 
occur when disease arises from healthy tissue, are associated with changes in these  networks. 
MONSTER is an approach to understanding these transitions. MONSTER models phenotypic-specific 
regulatory networks and then estimates a "transition matrix" that converts one state to another. 
By examining the properties of the transition matrix, we can gain insight into regulatory 
changes associated with phenotypic state transition.
}
\examples{
data(yeast)
design <- c(rep(0,20),rep(NA,10),rep(1,20))
monsterRes <- monster(yeast$exp.cc[1:500,], design, yeast$motif, nullPerms=10, numMaxCores=4)
plot(monsterRes)
}
\seealso{
\code{\link{monsterAnalysis-class}}
}

